name: Build and Deploy Frontend and Backend to AKS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the deployment environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - prod

env:
  ACR_NAME: jubbuseacrinmh.azurecr.io   # Replace with your ACR login server
  RESOURCE_GROUP: verito-aks-rg
  CLUSTER_NAME: verito-aks-cluster
  NAMESPACE: default

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      ENV: ${{ github.event.inputs.environment }}
      IMAGE_NAME: aks-demo-app-${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure using SPN credentials
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # Must be JSON with clientId, clientSecret, subscriptionId, tenantId
          enable-AzPSSession: true

      - name: ACR Login via Azure CLI
        run: az acr login --name jubbuseacrinmh  # NOT the full login server; just the name

      - name: Build and push frontend image
        run: |
          docker build -t $ACR_NAME/${{ env.IMAGE_NAME }}-frontend:${{ github.run_number }} ./frontend
          docker push $ACR_NAME/${{ env.IMAGE_NAME }}-frontend:${{ github.run_number }}

      - name: Build and push backend image
        run: |
          docker build -t $ACR_NAME/${{ env.IMAGE_NAME }}-backend:${{ github.run_number }} ./backend
          docker push $ACR_NAME/${{ env.IMAGE_NAME }}-backend:${{ github.run_number }}

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-and-push

    env:
      ENV: ${{ github.event.inputs.environment }}
      IMAGE_NAME: aks-demo-app-${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Replace BUILD_ID and ENV in frontend deployment
        run: |
          sed -i "s|__BUILD_ID__|${{ github.run_number }}|g" manifest/frontend-deployment.yaml
          sed -i "s|__ENV__|${{ env.IMAGE_NAME }}|g" manifest/frontend-deployment.yaml

      - name: Log in to Azure using SPN credentials
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # Must be JSON with clientId, clientSecret, subscriptionId, tenantId
          enable-AzPSSession: true

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      - name: Deploy Frontend to AKS
        run: kubectl apply -f manifest/frontend-deployment.yaml

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-and-push

    env:
      ENV: ${{ github.event.inputs.environment }}
      IMAGE_NAME: aks-demo-app-${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Replace BUILD_ID and ENV in backend deployment
        run: |
          sed -i "s|__BUILD_ID__|${{ github.run_number }}|g" manifest/backend-deployment.yaml
          sed -i "s|__ENV__|${{ env.IMAGE_NAME }}|g" manifest/backend-deployment.yaml

      - name: Log in to Azure using SPN credentials
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # Must be JSON with clientId, clientSecret, subscriptionId, tenantId
          enable-AzPSSession: true

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      - name: Deploy Backend to AKS
        run: kubectl apply -f manifest/backend-deployment.yaml
